{"version":3,"sources":["Video.jsx","index.js","App.js"],"names":["Video","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","videoPlayer","loaded","playing","duration","setVideoRef","element","videoElement","handleVideoPlayerInitialization","console","log","cld","window","cloudinary","Cloudinary","new","cloud_name","secure","document","body","contains","id","autoplay","muted","controls","transformation","width","crop","gravity","source","publicId","setState","onHandleVideoPlay","minutes","parseInt","sec","preparedSecs","concat","videoObj","react_default","a","createElement","ref","preload","data-type","className","Component","defaultProps","src","enableLazyLoad","rootElement","getElementById","ReactDOM","render","_useState","useState","_useState2","slicedToArray","count","setCount","src_Video","tabindex","onClick"],"mappings":"2MAKMA,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,MAAQ,CACXC,YAAa,KACbC,QAAQ,EACRC,SAAS,EACTC,SAAU,IAGZX,EAAKY,YAAc,SAACC,GAClBb,EAAKc,aAAeD,GAXLb,mFAgBjBG,KAAKY,4FAKLC,QAAQC,IAAI,cACZ,IAAMC,EAAMC,OAAOC,WAAWC,WAAWC,IAAI,CAC3CC,WAAY,gBACZC,QAAQ,IAGHL,OAAOM,SAASC,KAAKC,SAASxB,KAAKW,eAGvBI,EAAIV,YAAYL,KAAKW,aAAac,GAAI,CACrDC,UAAU,EACVC,OAAO,EACPC,UAAU,EACVC,eAAgB,CACd,CAAEC,MAAO,IAAKC,KAAM,QAASC,QAAQ,WAIhCC,OAAOjC,KAAKJ,MAAMsC,+CAI7BlC,KAAKmC,SAAS,CAAE5B,SAAS,IAErBP,KAAKJ,MAAMwC,mBACbpC,KAAKJ,MAAMwC,iEAKb,IAEMC,EAAUC,SAAStC,KAAKI,MAAMC,YAAYG,WAF/B,GAEsD,IACjE+B,EAAMD,SAAStC,KAAKI,MAAMC,YAAYG,WAH3B,GAGiD,IAC5DgC,EAAeD,GAHK,GAGsBA,EAA3B,IAAAE,OAAqCF,GAC1DvC,KAAKmC,SAAS,CACZ3B,SAAQ,GAAAiC,OAAKJ,EAAL,KAAAI,OAAgBD,sCAInB,IACCN,EAAalC,KAAKJ,MAAlBsC,SAERrB,QAAQC,IAAI,YAAYoB,GAExB,IAAMQ,EACJC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SACEC,IAAK9C,KAAKS,YACVgB,GAAG,qBACHsB,QAAQ,WACRnB,UAAQ,EACRoB,YAAU,QACVC,UAAU,iDAKhB,OACEN,EAAAC,EAAAC,cAAA,WACGH,UAlFWQ,aAgGpBvD,EAAMwD,aAAe,CACnBC,IAAK,GACLlB,SAAU,GACVmB,gBAAgB,GAGH1D,QCtGf,IAAM2D,EAAchC,SAASiC,eAAe,QAC5CC,IAASC,OAAOd,EAAAC,EAAAC,cCDD,SAAajD,GAAO,IAAA8D,EACPC,mBAAS,GADFC,EAAA9D,OAAA+D,EAAA,EAAA/D,CAAA4D,EAAA,GAC1BI,EAD0BF,EAAA,GACnBG,EADmBH,EAAA,GAGjC,OACEjB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACbN,EAAAC,EAAAC,cAAA,iEACAF,EAAAC,EAAAC,cAACmB,EAAD,CACEvC,GAAG,qBACHsB,QAAQ,WACRb,SAAS,uBACT+B,SAAS,OAEXtB,EAAAC,EAAAC,cAAA,qDACAF,EAAAC,EAAAC,cAAA,wBAAgBiB,EAAhB,UACAnB,EAAAC,EAAAC,cAAA,UAAQqB,QAAS,kBAAMH,EAASD,EAAQ,KAAxC,cDbU,MAASR","file":"static/js/main.08be93c8.chunk.js","sourcesContent":["// https://cloudinary.zendesk.com/agent/tickets/101702\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\n\nclass Video extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      videoPlayer: null,\n      loaded: false,\n      playing: false,\n      duration: \"\"\n    };\n\n    this.setVideoRef = (element) => {\n      this.videoElement = element;\n    };\n  }\n\n  componentDidMount() {\n    this.handleVideoPlayerInitialization();\n  }\n\n  handleVideoPlayerInitialization() {\n    // debugger;\n    console.log(\"handleinit\")\n    const cld = window.cloudinary.Cloudinary.new({\n      cloud_name: \"picturecloud7\",\n      secure: true\n    });\n\n      if (!window.document.body.contains(this.videoElement)) {\n        return;\n      }\n      const cldVideo = cld.videoPlayer(this.videoElement.id, {\n        autoplay: false,\n        muted: true,\n        controls: true,\n        transformation: [\n          { width: 500, crop: \"scale\" ,gravity:\"face\"},\n        ]\n      });\n\n      cldVideo.source(this.props.publicId)\n  }\n\n  handlePlay() {\n    this.setState({ playing: true });\n\n    if (this.props.onHandleVideoPlay) {\n      this.props.onHandleVideoPlay();\n    }\n  }\n\n  handleMetadataLoad() {\n    const secInMin = 60;\n    const doubleDigitNumber = 10;\n    const minutes = parseInt(this.state.videoPlayer.duration() / secInMin, 10);\n    const sec = parseInt(this.state.videoPlayer.duration() % secInMin,10);\n    const preparedSecs = sec >= doubleDigitNumber ? sec : `0${sec}`;\n    this.setState({\n      duration: `${minutes}:${preparedSecs}`\n    });\n  }\n\n  render() {\n    const { publicId } = this.props;\n    debugger;\n    console.log(\"public id\",publicId)\n\n    const videoObj = (\n      <div>\n        <video\n          ref={this.setVideoRef}\n          id=\"react-video-player\"\n          preload=\"metadata\"\n          controls\n          data-type=\"video\"\n          className=\"cld-video-player cld-video-player-skin-dark\"\n        />\n      </div>\n    );\n\n    return (\n      <div>\n        {videoObj}\n    </div>\n    );\n  }\n}\n\nVideo.propTypes = {\n  src: PropTypes.string.isRequired,\n  publicId: PropTypes.string.isRequired,\n  isRightRail: PropTypes.bool,\n  onHandleVideoPlay: PropTypes.func,\n  enableLazyLoad: PropTypes.bool\n};\n\nVideo.defaultProps = {\n  src: \"\",\n  publicId: \"\",\n  enableLazyLoad: true\n};\n\nexport default Video;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n\n","import React, { useState } from \"react\";\nimport \"./styles.css\";\n\nimport CldVideo from \"./Video\";\n\nexport default function App(props) {\n  const [count, setCount] = useState(0);\n\n  return (\n    <div className=\"App\">\n      <h1>Hello Cloudinary CodeSandbox React and Video Player</h1>\n      <CldVideo\n        id=\"react-video-player\"\n        preload=\"metadata\"\n        publicId=\"video/becky-sledding\"\n        tabindex=\"-1\" \n      />\n      <h2>Start editing to see some magic happen!</h2>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>Click me</button>\n    </div>\n  );\n}\n"],"sourceRoot":""}